// Factorization program in the time reversible language Janus
// C. Lutz and H. Derby.
// Janus: a time-reversible language. A letter to Landauer.
// Available at http://www.cise.ufl.edu/%7Empf/rc/janus.html,
// 1982.

// Operator names are different from the original program.
// #, :, &,  ===> !=, <=>, &&, %


// factor num into table in fact[]
procedure factor(int num, int try, int z, int i, int fact)
    from (try = 0) && (num > 1) loop
        call nexttry(try)
        from fact[i] != try loop               // Divide out all occurrences of this
            i += 1                             // factor
            fact[i] += try
            z += num / try
            z <=> num
            z -= num * try
	    until (num % try) != 0
    until (try * try) > num                    // Exit early if possible

    if num != 1 then
        i += 1                                 // Put last prime away, if not done
        // FIXME: change when lval-swap is implemented
        fact[i] ^= num                         // and zero num
        num     ^= fact[i]
        fact[i] ^= num
    else
        num -= 1
    fi fact[i] != fact[i-1]

    if (fact[i-1] * fact[i-1]) < fact[i] then  // Zero try
        from (try*try) > fact[i] loop
            call nexttrybwd(try)               // FIXME: change when uncall is implemented
	    until try = 0
    else
        try -= fact[i-1]
    fi (fact[i-1] * fact[i-1]) < fact[i]

    call zeroi(i, fact)                        // Zero i

procedure zeroi(int i, int fact)
    from fact[i+1] = 0 loop
        i -= 1
    until i = 0

procedure nexttry(int try)
    try += 2
    if try = 4 then
        try -= 1
    fi try = 3

// FIXME: remove when uncall is implemented
procedure nexttrybwd(int try)
    if try = 3 then
        try += 1
    fi try = 4
    try -= 2

procedure main()
    int num      // Number to factor.  Ends up zero
    int try      // Attempted factor.  Starts and ends zero
    int z        // Temporary.  Starts and ends zero
    int i        // Pointer to last factor in factor table.  Starts zero
    int fact[20] // Factor table.  Starts zero. Ends with factors in ascending order

    num += 840
    call factor(num, try, z, i, fact)

/*
procedure main_bwd
      fact[1]+=2
      fact[2]+=2
      fact[3]+=2
      fact[4]+=3
      fact[5]+=5
      fact[6]+=7
      uncall factor
*/
